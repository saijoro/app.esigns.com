import{jsxs as b}from"react/jsx-runtime";import*as v from"node:fs";import{defaultTransformer as O,createFileRoute as S,lazyFn as T,lazyRouteComponent as j,useRouter as H}from"@tanstack/react-router";import $ from"tiny-invariant";import{createContext as A,useContext as E}from"react";function h(e,t,n){return Object.assign(e,{url:"https://localhost:3000"})}function M(e){return e instanceof Headers?new Headers(e):Array.isArray(e)?new Headers(e):typeof e=="object"?new Headers(e):new Headers}function I(...e){return e.reduce((t,n)=>{const r=M(n);for(const[o,a]of r.entries())t.set(o,a);return t},new Headers)}function l(e,t){const n=t||e||{};return typeof n.method>"u"&&(n.method="GET"),{options:n,middleware:r=>l(void 0,Object.assign(n,{middleware:r})),validator:r=>l(void 0,Object.assign(n,{validator:r})),handler:(...r)=>{const[o,a]=r;Object.assign(n,{...o,extractedFn:o,serverFn:a}),$(o.url,"createServerFn must be called with a function that is marked with the 'use server' pragma. Are you using the @tanstack/start-vite-plugin ?");const s=[...n.middleware||[],N(n)];return Object.assign(async i=>f(s,"client",{...o,method:n.method,data:i?.data,headers:i?.headers,context:Object.assign({},o)}).then(c=>c.result),{...o,__executeServer:i=>{const c=i instanceof FormData?P(i):i;return f(s,"server",{...o,...c}).then(d=>({result:d.result,context:d.sendContext}))}})}}}function P(e){const t=e.get("__TSR_CONTEXT");if(e.delete("__TSR_CONTEXT"),typeof t!="string")return{context:{},data:e};try{return{context:O.parse(t),data:e}}catch{return{data:e}}}function k(e){const t=[],n=r=>{r.forEach(o=>{o.options.middleware&&n(o.options.middleware),t.push(o)})};return n(e),t}const u=(e,t,n)=>e({data:t.data,context:t.context,sendContext:t.sendContext,method:t.method,next:r=>{const o={...t.context,...r?.context},a={...t.sendContext,...r?.sendContext??{}},s=I(t.headers,r?.headers);return n({method:t.method,data:t.data,context:o,sendContext:a,headers:s,result:r?.result??t.result})}});function z(e,t){if(e==null)return{};if("~standard"in e){const n=e["~standard"].validate(t);if("value"in n)return n.value;throw n instanceof Promise?new Error("Async validation not supported"):new Error(JSON.stringify(n.issues,void 0,2))}if("parse"in e)return e.parse(t);if(typeof e=="function")return e(t);throw new Error("Invalid validator type!")}async function f(e,t,n){const r=k(e),o=async a=>{const s=r.shift();if(!s)return a;s.options.validator&&(t!=="client"||s.options.validateClient)&&(a.data=await z(s.options.validator,a.data));const i=t==="client"?s.options.client:s.options.server;return i?u(i,a,async c=>{if(t==="client"&&s.options.clientAfter){const d=await o(c);return u(s.options.clientAfter,d,F=>F)}return o(c)}):o(a)};return o({...n,headers:n.headers||{},sendContext:n.sendContext||{},context:n.context||{}})}function N(e){return{_types:void 0,options:{validator:e.validator,validateClient:e.validateClient,client:async({next:t,sendContext:n,...r})=>{var o;const a=await((o=e.extractedFn)==null?void 0:o.call(e,{...r,context:n}));return t(a)},server:async({next:t,...n})=>{var r;const o=await((r=e.serverFn)==null?void 0:r.call(e,n));return t({result:o})}}}}const G=A({counter:0,setCounter:()=>{}}),L=()=>Promise.resolve().then(()=>C),U=()=>Promise.resolve().then(()=>C),p=S("/_layout/")({component:j(U,"component",()=>p.ssr),loader:T(L,"loader")}),w="count.txt";async function m(){return parseInt(await v.promises.readFile(w,"utf-8").catch(()=>"0"))}const y=l({method:"GET"}).handler(h(_),()=>m()),x=l().validator(e=>e).handler(h(g),async({data:e})=>{const t=await m();await v.promises.writeFile(w,`${t+e}`)}),X=function(){const t=H(),n=p.useLoaderData(),{setCounter:r}=E(G);return b("button",{type:"button",onClick:()=>{r(n),x({data:1}).then(()=>{t.invalidate()})},children:["Add 1 to ",n,"?"]})},B=async()=>await y();function _(e){return y.__executeServer(e)}function g(e){return x.__executeServer(e)}const C=Object.freeze(Object.defineProperty({__proto__:null,$$function0:_,$$function1:g,component:X,loader:B},Symbol.toStringTag,{value:"Module"}));export{_ as $$function0,g as $$function1,X as component,B as loader};
