/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LayoutImport } from './routes/_layout'
import { Route as AuthImport } from './routes/_auth'
import { Route as LayoutSubLayoutImport } from './routes/_layout/_sub-layout'
import { Route as AuthSigninImport } from './routes/_auth/signin'
import { Route as LayoutSubLayoutIndexImport } from './routes/_layout/_sub-layout/index'
import { Route as LayoutSubLayoutCreateDocumentImport } from "./routes/_layout/_sub-layout/create-document";

// Create/Update Routes

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const LayoutSubLayoutRoute = LayoutSubLayoutImport.update({
  id: '/_sub-layout',
  getParentRoute: () => LayoutRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRoute,
} as any)

const LayoutSubLayoutIndexRoute = LayoutSubLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutSubLayoutRoute,
} as any)

const LayoutSubLayoutCreateDocumentRoute =
  LayoutSubLayoutCreateDocumentImport.update({
    id: "/create-document",
    path: "/create-document",
    getParentRoute: () => LayoutSubLayoutRoute,
  } as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    "/_auth": {
      id: "/_auth";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    "/_layout": {
      id: "/_layout";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof LayoutImport;
      parentRoute: typeof rootRoute;
    };
    "/_auth/signin": {
      id: "/_auth/signin";
      path: "/signin";
      fullPath: "/signin";
      preLoaderRoute: typeof AuthSigninImport;
      parentRoute: typeof AuthImport;
    };
    "/_layout/_sub-layout": {
      id: "/_layout/_sub-layout";
      path: "";
      fullPath: "";
      preLoaderRoute: typeof LayoutSubLayoutImport;
      parentRoute: typeof LayoutImport;
    };
    "/_layout/_sub-layout/create-document": {
      id: "/_layout/_sub-layout/create-document";
      path: "/create-document";
      fullPath: "/create-document";
      preLoaderRoute: typeof LayoutSubLayoutCreateDocumentImport;
      parentRoute: typeof LayoutSubLayoutImport;
    };
    "/_layout/_sub-layout/": {
      id: "/_layout/_sub-layout/";
      path: "/";
      fullPath: "/";
      preLoaderRoute: typeof LayoutSubLayoutIndexImport;
      parentRoute: typeof LayoutSubLayoutImport;
    };
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthSigninRoute: typeof AuthSigninRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthSigninRoute: AuthSigninRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface LayoutSubLayoutRouteChildren {
  LayoutSubLayoutCreateDocumentRoute: typeof LayoutSubLayoutCreateDocumentRoute;
  LayoutSubLayoutIndexRoute: typeof LayoutSubLayoutIndexRoute;
}

const LayoutSubLayoutRouteChildren: LayoutSubLayoutRouteChildren = {
  LayoutSubLayoutCreateDocumentRoute: LayoutSubLayoutCreateDocumentRoute,
  LayoutSubLayoutIndexRoute: LayoutSubLayoutIndexRoute,
};

const LayoutSubLayoutRouteWithChildren = LayoutSubLayoutRoute._addFileChildren(
  LayoutSubLayoutRouteChildren,
)

interface LayoutRouteChildren {
  LayoutSubLayoutRoute: typeof LayoutSubLayoutRouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutSubLayoutRoute: LayoutSubLayoutRouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

export interface FileRoutesByFullPath {
  "": typeof LayoutSubLayoutRouteWithChildren;
  "/signin": typeof AuthSigninRoute;
  "/create-document": typeof LayoutSubLayoutCreateDocumentRoute;
  "/": typeof LayoutSubLayoutIndexRoute;
}

export interface FileRoutesByTo {
  "": typeof LayoutRouteWithChildren;
  "/signin": typeof AuthSigninRoute;
  "/create-document": typeof LayoutSubLayoutCreateDocumentRoute;
  "/": typeof LayoutSubLayoutIndexRoute;
}

export interface FileRoutesById {
  __root__: typeof rootRoute;
  "/_auth": typeof AuthRouteWithChildren;
  "/_layout": typeof LayoutRouteWithChildren;
  "/_auth/signin": typeof AuthSigninRoute;
  "/_layout/_sub-layout": typeof LayoutSubLayoutRouteWithChildren;
  "/_layout/_sub-layout/create-document": typeof LayoutSubLayoutCreateDocumentRoute;
  "/_layout/_sub-layout/": typeof LayoutSubLayoutIndexRoute;
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths: "" | "/signin" | "/create-document" | "/";
  fileRoutesByTo: FileRoutesByTo;
  to: "" | "/signin" | "/create-document" | "/";
  id:
    | "__root__"
    | "/_auth"
    | "/_layout"
    | "/_auth/signin"
    | "/_layout/_sub-layout"
    | "/_layout/_sub-layout/create-document"
    | "/_layout/_sub-layout/";
  fileRoutesById: FileRoutesById;
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_layout"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/signin"
      ]
    },
    "/_layout": {
      "filePath": "_layout.tsx",
      "children": [
        "/_layout/_sub-layout"
      ]
    },
    "/_auth/signin": {
      "filePath": "_auth/signin.tsx",
      "parent": "/_auth"
    },
    "/_layout/_sub-layout": {
      "filePath": "_layout/_sub-layout.tsx",
      "parent": "/_layout",
      "children": [
        "/_layout/_sub-layout/create-document",
        "/_layout/_sub-layout/"
      ]
    },
    "/_layout/_sub-layout/create-document": {
      "filePath": "_layout/_sub-layout/create-document.tsx",
      "parent": "/_layout/_sub-layout"
    },
    "/_layout/_sub-layout/": {
      "filePath": "_layout/_sub-layout/index.tsx",
      "parent": "/_layout/_sub-layout"
    }
  }
}
ROUTE_MANIFEST_END */
